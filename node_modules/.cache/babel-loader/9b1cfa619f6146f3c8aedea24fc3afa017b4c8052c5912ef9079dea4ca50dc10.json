{"ast":null,"code":"var _jsxFileName = \"/home/kadaji777/HospitalManagementSystem/src/context/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use auth\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// Provider component\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(() => {\n    const saved = localStorage.getItem(\"user\");\n    return saved ? JSON.parse(saved) : null;\n  });\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    if (!user && location.pathname !== \"/login\" && location.pathname !== \"/signup\") {\n      navigate(\"/login\");\n    }\n  }, [user, navigate, location.pathname]);\n  const login = ({\n    username,\n    password,\n    role\n  }) => {\n    const fakeUser = {\n      username,\n      role\n    };\n    localStorage.setItem(\"user\", JSON.stringify(fakeUser));\n    setUser(fakeUser);\n    navigate(`/dashboard/${role}`);\n  };\n  const logout = () => {\n    localStorage.removeItem(\"user\");\n    setUser(null);\n    navigate(\"/login\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"AK6dDWSfUXfwRRdGn7qCkZC7/jI=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","useLocation","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","saved","localStorage","getItem","JSON","parse","navigate","location","pathname","login","username","password","role","fakeUser","setItem","stringify","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kadaji777/HospitalManagementSystem/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\n// Create the context\nconst AuthContext = createContext();\n\n// Custom hook to use auth\nexport const useAuth = () => useContext(AuthContext);\n\n// Provider component\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(() => {\n    const saved = localStorage.getItem(\"user\");\n    return saved ? JSON.parse(saved) : null;\n  });\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!user && location.pathname !== \"/login\" && location.pathname !== \"/signup\") {\n      navigate(\"/login\");\n    }\n  }, [user, navigate, location.pathname]);\n\n  const login = ({ username, password, role }) => {\n    const fakeUser = { username, role };\n    localStorage.setItem(\"user\", JSON.stringify(fakeUser));\n    setUser(fakeUser);\n    navigate(`/dashboard/${role}`);\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"user\");\n    setUser(null);\n    navigate(\"/login\");\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;;AAE3D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMS,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMT,UAAU,CAACO,WAAW,CAAC;AAAA;;AAEpD;AAAAE,EAAA,CAFaD,OAAO;AAGpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,MAAM;IACrC,MAAMc,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC1C,OAAOF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,GAAG,IAAI;EACzC,CAAC,CAAC;EAEF,MAAMK,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAC9B,MAAMkB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,IAAI,CAACW,IAAI,IAAIQ,QAAQ,CAACC,QAAQ,KAAK,QAAQ,IAAID,QAAQ,CAACC,QAAQ,KAAK,SAAS,EAAE;MAC9EF,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,CAACP,IAAI,EAAEO,QAAQ,EAAEC,QAAQ,CAACC,QAAQ,CAAC,CAAC;EAEvC,MAAMC,KAAK,GAAGA,CAAC;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC;EAAK,CAAC,KAAK;IAC9C,MAAMC,QAAQ,GAAG;MAAEH,QAAQ;MAAEE;IAAK,CAAC;IACnCV,YAAY,CAACY,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACW,SAAS,CAACF,QAAQ,CAAC,CAAC;IACtDb,OAAO,CAACa,QAAQ,CAAC;IACjBP,QAAQ,CAAC,cAAcM,IAAI,EAAE,CAAC;EAChC,CAAC;EAED,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACnBd,YAAY,CAACe,UAAU,CAAC,MAAM,CAAC;IAC/BjB,OAAO,CAAC,IAAI,CAAC;IACbM,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEd,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,IAAI;MAAEU,KAAK;MAAEO;IAAO,CAAE;IAAAnB,QAAA,EAClDA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACzB,GAAA,CAjCWF,YAAY;EAAA,QAMNP,WAAW,EACXC,WAAW;AAAA;AAAAkC,EAAA,GAPjB5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}